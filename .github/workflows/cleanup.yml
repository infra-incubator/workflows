name: Cleanup Registry with Werf

on:
  workflow_call:
    inputs:
      skip_security:
        required: false
        type: boolean
        default: false
        description: 'Skip security checks (use when security is handled by caller)'
      keep_days:
        required: false
        type: number
        default: 7
        description: 'Keep images newer than X days'
      dry_run:
        required: false
        type: boolean
        default: false
        description: 'Show what would be deleted without actually deleting'
    secrets:
      REGISTRY_HOST:
        required: true
      REGISTRY_REPO:
        required: true
      REGISTRY_USERNAME:
          required: true
      REGISTRY_PASSWORD:
          required: true

jobs:
  security:
    if: inputs.skip_security != true
    uses: ./.github/workflows/security.yml
    with:
      min_permission_level: 'write'
      allowed_events: 'push,pull_request,workflow_dispatch'

  cleanup:
    name: Cleanup Registry
    runs-on: ubuntu-latest
    needs: security
    if: inputs.skip_security == true || needs.security.outputs.security_passed == 'true'
    container:
      image: ghcr.io/werf/werf:2-stable-ubuntu
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create dynamic cleanup config
        run: |
          KEEP_HOURS=$((inputs.keep_days * 24))
          cat > werf-cleanup.yaml << EOF
          configVersion: 1
          
          cleanup:
            keepPolicies:
            - references:
                tag: latest
                limit:
                  last: -1
          
            - references:
                tag: /^v\d+\.\d+\.\d+.*$/
                limit:
                  last: -1
          
            - references:
                branch: /.*/
                limit:
                  in: ${KEEP_HOURS}h
          EOF

      - name: Show cleanup plan (dry run)
        if: inputs.dry_run == true
        env:
          WERF_REPO: ${{ secrets.REGISTRY_HOST }}${{ secrets.REGISTRY_REPO }}
        run: |
          werf cr login --insecure-registry=true --username ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }} ${{ secrets.REGISTRY_HOST }}
          werf cleanup --without-kube --dry-run --config werf-cleanup.yaml

      - name: Execute cleanup
        if: inputs.dry_run != true
        env:
          WERF_REPO: ${{ secrets.REGISTRY_HOST }}${{ secrets.REGISTRY_REPO }}
        run: |
          werf cr login --insecure-registry=true --username ${{ secrets.REGISTRY_USERNAME }} --password ${{ secrets.REGISTRY_PASSWORD }} ${{ secrets.REGISTRY_HOST }}
          werf cleanup --without-kube --config werf-cleanup.yaml --verbose
